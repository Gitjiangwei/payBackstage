<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hero.renche.mapper.DemandMapper">
    
    <update id="updateDemandStatus">
        update tx_demand SET status=#{status}
        where demand_id = #{demandId}
    </update>

    <select id="queryDemand"  resultType="org.hero.renche.entity.vo.DemandVo">
        SELECT demand_id as demandId,d.material_id as materialId,material_name as materialName,material_no as materialNo,material_type as materialType,
        material_unit as materialUnit,need_number as needNumber,remarks,task_id as taskId,have_way as haveWay,prj_item_id as prjItemId,
        expiration_date as expirationDate,d.`status`,s.realname as createUserName
        from tx_demand d
        left join tx_material_info m on m.material_id = d.material_id
        left join sys_user s on s.id = d.create_user
        <trim prefix="where" prefixOverrides="and">
            <if test="DemandVo.materialName != null and DemandVo.materialName != '' ">
                and m.material_name like CONCAT('%',#{DemandVo.materialName},'%')
            </if>
            <if test="DemandVo.materialType != null and DemandVo.materialType != '' ">
                and m.material_type like CONCAT('%',#{DemandVo.materialType},'%')
            </if>
            <if test="DemandVo.taskId != null and DemandVo.taskId != '' ">
                and task_id = #{DemandVo.taskId}
            </if>
            <if test="DemandVo.status != null and DemandVo.status != '' ">
               and d.status = #{DemandVo.status}
            </if>
        </trim>
        order by d.create_time desc
    </select>

    <select id="queryTaskDemand"  resultType="org.hero.renche.entity.vo.DemandVo">
        SELECT prj_item_id, demand_id,equipment_name,equipment_model,equipment_number,create_time,create_name,update_time,
        status,whether_time,remarks,reasons , have_way from tx_demand where task_id = #{taskId}
        order by update_time desc ,create_time desc
    </select>

    <select id="queryDemandStatus" resultType="org.hero.renche.entity.vo.DemandVo">
        SELECT demand_id,equipment_name,equipment_model,have_way,equipment_number,create_name,update_time,status,whether_time,remarks,reasons from tx_demand
        <trim prefix="where" prefixOverrides="and">
            <if test="equipmentName!=null and equipmentName != '' ">
                and equipment_name like CONCAT('%',#{equipmentName},'%')
            </if>

        </trim>
        order by update_time desc ,create_time desc
    </select>

    <delete id="delDemandByTaskId">
        delete from tx_demand where task_id in
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach> and make_demand = '0'
    </delete>

    <update id="updateWhetherTime">
        update tx_demand set whether_time = NOW()
        where demand_id = #{demandId}
    </update>

    <select id="getDemandByPrjItenId" resultType="org.hero.renche.entity.vo.DemandVo">
        select * from tx_demand where  prj_item_id = #{prjItemId}
    </select>
</mapper>